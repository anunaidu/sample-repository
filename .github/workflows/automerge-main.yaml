name: Automerge Workflow

on:
  workflow_dispatch:
    inputs:
      srcBranch:
        description: 'Source branch to merge from'
        required: true
        type: string
      tgtBranch:
        description: 'Target branch to merge into'
        required: true
        type: string

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.MY_CUSTOM_TOKEN }}" | gh auth login --with-token
        env:
          GH_TOKEN: ${{ secrets.MY_CUSTOM_TOKEN }}

      - name: Verify authentication
        run: gh auth status

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Check branch protection
        id: check_protection
        run: |
          protection_status=$(gh api repos/${{ github.repository }}/branches/${{ github.event.inputs.tgtBranch }}/protection --jq '.enabled')
          echo "protection_status=$protection_status" >> $GITHUB_ENV
          echo "Protection status: $protection_status"

      - name: Merge branches if not protected
        if: env.protection_status == 'false'
        run: |
          git checkout ${{ github.event.inputs.tgtBranch }}
          git merge ${{ github.event.inputs.srcBranch }}
          git push

      - name: Create PR if protected
        if: env.protection_status == 'true'
        run: |
          gh pr create --base ${{ github.event.inputs.tgtBranch }} --head ${{ github.event.inputs.srcBranch }} --title "Automerged PR from ${{ github.event.inputs.srcBranch }}" --body "Automerged PR"

      - name: Check for merge conflicts
        id: conflict_check
        run: |
          git checkout ${{ github.event.inputs.tgtBranch }}
          git merge ${{ github.event.inputs.srcBranch }} || echo "Conflict detected" > conflict.txt
          if [ -f conflict.txt ]; then
            echo "Merge conflicts detected. Sending email."
            curl -X POST "https://api.sendgrid.com/v3/mail/send" \
              -H "Authorization: Bearer ${{ secrets.SENDGRID_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d '{
                "personalizations": [
                  {
                    "to": [{ "email": "mahi.naidu770@gmail.com" }],
                    "subject": "Merge Conflict Notification"
                  }
                ],
                "from": { "email": "noreply@github.com" },
                "content": [
                  {
                    "type": "text/plain",
                    "value": "Merge conflicts detected in the workflow. Please check the logs for details."
                  }
                ]
              }'
          fi

      - name: Send success email
        if: success()
        run: |
          curl -X POST "https://api.sendgrid.com/v3/mail/send" \
            -H "Authorization: Bearer ${{ secrets.SENDGRID_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "personalizations": [
                {
                  "to": [{ "email": "mahi.naidu770@gmail.com" }],
                  "subject": "Workflow Success"
                }
              ],
              "from": { "email": "noreply@github.com" },
              "content": [
                {
                  "type": "text/plain",
                  "value": "The workflow has succeeded."
                }
              ]
            }'

      - name: Clean up
        run: |
          rm -f conflict.txt
