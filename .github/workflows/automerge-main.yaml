name: Automerge Workflow

on:
  workflow_dispatch:
    inputs:
      srcBranch:
        description: 'Source branch to merge from'
        required: true
        type: string
      tgtBranch:
        description: 'Target branch to merge into'
        required: true
        type: string

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all branches and tags

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Verify Branch Existence
        run: |
          git fetch --all
          git branch -a
          if ! git show-ref --quiet refs/heads/${{ github.event.inputs.tgtBranch }}; then
            echo "Target branch '${{ github.event.inputs.tgtBranch }}' does not exist."
            exit 1
          fi
          if ! git show-ref --quiet refs/heads/${{ github.event.inputs.srcBranch }}; then
            echo "Source branch '${{ github.event.inputs.srcBranch }}' does not exist."
            exit 1
          fi

      - name: Check branch protection
        id: check_protection
        run: |
          protection_status=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/branches/${{ github.event.inputs.tgtBranch }}/protection \
            | jq '.enabled' 2>&1 || echo "404")
          if [ "$protection_status" == "404" ]; then
            echo "Branch not protected"
            echo "protection_status=false" >> $GITHUB_ENV
          else
            echo "protection_status=true" >> $GITHUB_ENV
          fi

      - name: Merge branches if not protected
        if: env.protection_status == 'false'
        run: |
          git checkout ${{ github.event.inputs.tgtBranch }}
          git merge ${{ github.event.inputs.srcBranch }}
          git push

      - name: Create PR if protected
        if: env.protection_status == 'true'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "Automerged PR from ${{ github.event.inputs.srcBranch }}",
              "body": "Automerged PR",
              "head": "${{ github.event.inputs.srcBranch }}",
              "base": "${{ github.event.inputs.tgtBranch }}"
            }' \
            https://api.github.com/repos/${{ github.repository }}/pulls

      - name: Check for merge conflicts
        id: conflict_check
        run: |
          git checkout ${{ github.event.inputs.tgtBranch }}
          git merge ${{ github.event.inputs.srcBranch }} || echo "Conflict detected" > conflict.txt
          if [ -f conflict.txt ]; then
            echo "Merge conflicts detected. Sending email."
            mahi.naidu770@gmail.com
          fi

      - name: Send success email
        if: success()
        run: |
          echo "Workflow succeeded. Sending email."
          mahi.naidu770@gmail.com

      - name: Clean up
        run: |
          rm -f conflict.txt
