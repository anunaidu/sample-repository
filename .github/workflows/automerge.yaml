name: Automerge Branches

on:
  push:
    branches:
      - automerge-testing  # Trigger on pushes to this branch
  workflow_dispatch:  # Manual trigger
    inputs:
      source-branch:
        description: 'Source branch'
        required: true
        default: 'test1'
      target-branch:
        description: 'Target branch'
        required: true
        default: 'master'
      verbose:
        description: 'Verbose output flag'
        required: false
        default: '-v'

jobs:
  automerge:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the default repository
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          path: src 

      # Step 2: Checkout the zero-devops-utils repository
      - name: Checkout zero-devops-utils repository
        uses: actions/checkout@v4
        with:
          repository: anunaidu/Copyright-checker
          path: cm-utils
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Dynamically set repository URLs
      - name: Get Source and Target Repository URLs
        run: |
          SRC_REPO_URL="https://github.com/${GITHUB_REPOSITORY}.git"
          SECOND_REPO_URL="git@github.com:anunaidu/Copyright-checker.git"
          echo "Source repository URL: $SRC_REPO_URL"
          echo "Second repository URL: $SECOND_REPO_URL"
          echo "SRC_REPO_URL=$SRC_REPO_URL" >> $GITHUB_ENV
          echo "SECOND_REPO_URL=$SECOND_REPO_URL" >> $GITHUB_ENV

      # Step 4: Run the Perl Automerge Script
      - name: Run Automerge Script
        run: |
          SRC_BRANCH="${{ github.event.inputs.source-branch }}"
          TARGET_BRANCH="${{ github.event.inputs.target-branch }}"
          MAILTO="anu@gmail.com"  # Hardcoded value for email recipient
          DONT_RESOLVE="-d"  # Hardcoded flag for don't resolve
          DONT_UPDATE="-n"   # Hardcoded flag for don't update
          VERBOSE="${{ github.event.inputs.verbose }}"  # Verbose flag

          echo "Running Automerge Script with source branch: $SRC_BRANCH and target branch: $TARGET_BRANCH..."
          
          perl cm-utils/automerge/automerge-git-via-merge.pl \
            -r ${GITHUB_WORKSPACE}/src \
            -f ${SRC_BRANCH} \
            -t ${TARGET_BRANCH} \
            -s ${SRC_REPO_URL} \
            -b ${SECOND_REPO_URL} \
            -m ${MAILTO} ${DONT_RESOLVE} ${DONT_UPDATE} ${VERBOSE}

        env:
          SRC_REPO_URL: ${{ env.SRC_REPO_URL }}
          SECOND_REPO_URL: ${{ env.SECOND_REPO_URL }}
